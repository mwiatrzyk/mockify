version: 2.1

commands:
  configure-git:
    steps:
      - run: git config --global user.name "CircleCI"
      - run: git config --global user.email "circleci@noreply.circleci.com"

  install-deps:
    parameters:
      ver_major:
        type: integer
      ver_minor:
        type: integer
    steps:
      - run: pyenv local <<parameters.ver_major>>.<<parameters.ver_minor>>
      - restore_cache:
          name: restore dependency cache
          keys:
            - poetry-py<<parameters.ver_major>><<parameters.ver_minor>>-{{ checksum "poetry.lock" }}
      - run: poetry env use <<parameters.ver_major>>.<<parameters.ver_minor>>
      - run: poetry install -q
      - save_cache:
          name: save dependency cache
          key: poetry-py<<parameters.ver_major>><<parameters.ver_minor>>-{{ checksum "poetry.lock" }}
          paths:
            - ~/.cache/pypoetry/

  push-to-git:
    steps:
      - run: git push --set-upstream origin $CIRCLE_BRANCH
      - run: git push --tags

jobs:
  test:
    docker:
      - image: cimg/python:<<parameters.ver_major>>.<<parameters.ver_minor>>
    parameters:
      ver_minor:
        type: integer
      ver_major:
        type: integer
    steps:
      - checkout
      - install-deps:
          ver_major: <<parameters.ver_major>>
          ver_minor: <<parameters.ver_minor>>
      - run: poetry run inv check

  test-all:
    docker:
      - image: cimg/python:3.12
    steps:
      - run: echo "All tests have passed."

  bump:
    docker:
      - image: cimg/python:3.12
    steps:
      - checkout
      - configure-git
      - install-deps:
          ver_major: 3
          ver_minor: 12
      - run: poetry run bumpify bump
      - push-to-git

  deploy:
    docker:
      - image: cimg/python:3.12
    steps:
      - checkout
      - configure-git
      - install-deps:
          ver_major: 3
          ver_minor: 12
      - run: poetry run pytest
      - run: poetry build
      - run: poetry config pypi-token.pypi $PYPI_TOKEN
      - run: poetry publish

workflows:
  test:
    jobs:
      - test:
          name: "test-py38"
          ver_major: 3
          ver_minor: 8
      - test:
          name: "test-py39"
          ver_major: 3
          ver_minor: 9
      - test:
          name: "test-py310"
          ver_major: 3
          ver_minor: 10
      - test:
          name: "test-py311"
          ver_major: 3
          ver_minor: 11
      - test:
          name: "test-py312"
          ver_major: 3
          ver_minor: 12
      - test-all:
          requires:
            - test-py38
            - test-py39
            - test-py310
            - test-py311
            - test-py312
      - bump:
          requires:
            - "test-all"
      - deploy:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*$/
